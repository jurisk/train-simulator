[workspace]
members = [
    "client/single-player",
    "client/graphics",
    "shared/domain",
    "shared/util",
    "networking/client",
    "networking/server",
    "networking/shared",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
authors = ["jurisk <jurisk@users.noreply.github.com>"]
license = "UNLICENSED"
edition = "2021"
rust-version = "1.80.1"

[workspace.dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
uuid = { version = "1.8", features = ["v4", "fast-rng"] }
fastrand = "2.1"
log = "0.4"
bimap = "0.6"
bincode = "1.3"
bigdecimal = "0.4"
pathfinding = "4.10"
itertools = "0.13"

# Later:    Consider using Frame pacing:
#           https://github.com/aevyrie/bevy_framepace
bevy = { version = "0.14", default-features = false, features = [] }
bevy_math = "0.14"
bevy_simplenet = { version = "0.12", default-features = false, features = [] }

# https://github.com/jakobhellermann/bevy-inspector-egui
# https://crates.io/crates/bevy-inspector-egui/versions
# Pulls in egui and that has to match with other egui versions used!

# TODO: Depends on migration to `bevy_egui` 0.29 as otherwise compilation breaks
# bevy-inspector-egui = { version = "0.25", features = ["highlight_changes", "bevy_pbr"] }
bevy-inspector-egui = { git = "https://github.com/jurisk/bevy-inspector-egui.git", features = ["highlight_changes", "bevy_pbr"] }

bevy_egui = "0.29"
egui = "0.28"

bevy_mod_raycast = "0.18"

clap = {  version = "4.5.16", features = ["derive"] }

# Should only be imported by `networking` code
enfync = "0.1"
url = "2.4"
wasm-bindgen = "0.2"

# Should only be imported by the `networking-*` code
# Axum version should match bevy_simplenet's version
axum = "0.6"
tokio = { version = "1.38", features = ["full"] }
tower = { version = "0.4" }
tower-http = { version = "0.3" }

# From https://doc.rust-lang.org/cargo/reference/profiles.html#codegen-units
# From https://rapier.rs/docs/user_guides/bevy_plugin/common_mistakes#my-local-build-of-rapier-is-slower-than-the-online-demos
[profile.release]
# Uncomment for profiling
# debug = true

# Commented for now, may reenable later:
# codegen-units = 1

# From https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations
# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# From https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations
# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

# From https://github.com/bevyengine/bevy/tree/main/examples#1-tweak-your-cargotoml
[profile.wasm-release]
# Use release profile as default values
inherits = "release"

# Optimize with size in mind, also try "s", sometimes it is better.
# This doesn't increase compilation times compared to -O3, great improvements
opt-level = "z"

# Do a second optimization pass removing duplicate or unused code from dependencies.
# Slows compile times, marginal improvements
# lto = "thin"
# lto = "fat"

# When building crates, optimize larger chunks at a time
# Slows compile times, marginal improvements
# codegen-units = 1

[workspace.lints.clippy]
pedantic = "warn"
style = "warn"
unwrap_used = { level = "warn", priority = -1 }
expect_used = { level = "warn", priority = -1 }
