[package]
name = "train-simulator"
version = "0.1.0"
edition = "2021"

[dependencies]
bevy = { version = "0.13.2", default-features = false, features = [
    "bevy_core_pipeline",
    "bevy_gizmos",
    "bevy_render",
    "bevy_pbr",
# Want to enable this but wasm32 builds then fail
#   "dynamic_linking",
    "tonemapping_luts",
    "webgpu", # https://caniuse.com/webgpu
    "x11",
]}

# Want to enable this but wasm32 builds then fail
# [target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# bevy_dylib = "0.13.2" #

rand = "0.9.0-alpha.1"

# From https://rapier.rs/docs/user_guides/bevy_plugin/common_mistakes#my-local-build-of-rapier-is-slower-than-the-online-demos
[profile.release]
codegen-units = 1

# From https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations
# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# From https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations
# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

[lints.clippy]
pedantic = "warn"
style = "warn"
unwrap_used = { level = "warn", priority = -1 }
expect_used = { level = "warn", priority = -1 }

# From https://github.com/bevyengine/bevy/tree/main/examples#1-tweak-your-cargotoml
[profile.wasm-release]
# Use release profile as default values
inherits = "release"

# Optimize with size in mind, also try "s", sometimes it is better.
# This doesn't increase compilation times compared to -O3, great improvements
opt-level = "z"

# Do a second optimization pass removing duplicate or unused code from dependencies.
# Slows compile times, marginal improvements
lto = "fat"

# When building crates, optimize larger chunks at a time
# Slows compile times, marginal improvements
codegen-units = 1